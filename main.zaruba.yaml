includes:
  - "./main.test.zaruba.yaml"
  - "./main.testGenerator.zaruba.yaml"
  - "./main.testHelm.zaruba.yaml"

tasks:


  build:
    icon: 🚧
    location: ./
    extend: core.runShellScript
    dependencies:
    - clearLog
    config:
      start: |
        set -e
        rm -f zaruba
        go build


  serveCoverage:
    icon: 🥗
    location: ./coverage
    extend: serveHttp
    dependencies:
    - clearLog
    - testCore
  

  buildZarubaImage:
    icon: 🐳
    extend: core.buildDockerImage
    dependencies:
    - clearLog
    - buildDevboxImage
    location: ./
    timeout: 1h


  buildDevboxImage:
    icon: 🐳
    extend: core.buildDockerImage
    dependencies:
    - clearLog
    location: ./devbox
    timeout: 1h


  buildDocker:
    icon: 🚧
    dependencies:
    - clearLog
    - buildZarubaImage
    - buildDevboxImage


  runAsContainer:
    icon: 🐳
    location: ./
    extend: core.startDockerContainer
    dependencies:
    - clearLog
    - buildZarubaImage
    config:
      ports: |
        2810
      localhost: host.docker.internal
      imageName: local/zaruba:latest
      containerName: zaruba
      rebuild: true


  pushZarubaImage:
    icon: 🐳
    extend: core.pushDockerImage
    dependencies:
    - clearLog
    - buildZarubaImage
    location: ./
    timeout: 1h


  pushDevboxImage:
    icon: 🐳
    extend: core.pushDockerImage
    dependencies:
    - clearLog
    - buildDevboxImage
    location: ./devbox
    timeout: 1h


  pushDocker:
    icon: 🔼
    dependencies:
    - clearLog
    - pushZarubaImage
    - pushDevboxImage


  pushRepo:
    icon: 🔼
    location: ./
    extend: core.runShellScript
    dependencies:
    - clearLog
    config:
      start: |
        git add . -A
        git commit -m "Save changes before pushing"
        git push -u origin HEAD


  push:
    icon: 🔼
    dependencies:
    - clearLog
    - pushDocker
    - pushRepo


  install:
    icon: 🔨
    location: ./
    extend: core.runShellScript
    dependencies:
    - clearLog
    config:
      start: ./install.sh


  makeTaskDocs:
    location: ./
    extend: core.runShellScript
    dependencies:
    - build
    config:
      services: |
        core.startService
        core.startNvmService
        core.startDockerContainer
        core.monitorPorts
        core.mysql.startDockerContainer
        core.cassandra.startDockerContainer
        core.runScript
        core.runShellScript
        core.runCoreScript
        core.runNvmScript
        core.prepareNodeJsApp
        core.preparePythonApp
        core.wrapper
        core.runPythonScript
        core.runNodeJsScript
        core.runInContainer
        core.mysql.execSql
        core.cassandra.execCql
        core.makeDockerTask
        core.makePresetDockerTask
        core.makeServiceTask
        core.makePresetServiceTask
        makeDockerTask
        makeCassandraDockerTask
        makeMysqlDockerTask
        makeRabbitmqDockerTask
        makeElasticsearchDockerTask
        makeRedisDockerTask
        makeMongoDockerTask
        makeServiceTask
        makeFastApiServiceTask
        makeGoServiceTask
        makeNodeJsServiceTask
        makePythonServiceTask
        makeStaticServiceTask
        makeHelmDeployment
        makeFastApiService
        makeFastApiModule
        makeFastApiRoute
        makeFastApiEventHandler
        makeFastApiRpcHandler
        makeFastApiCrud
        core.bootstrap
        core.setupPyUtil
        setupUbuntu
        setupTmux
        setupPyenv
        setupNvm
        setupSdkman
        setupSpark
        setupKubeClient
        core.showAdv
        injectBootstrap
        showVersion
        update
        serveHttp
        clearPreviousValues
        clearLog
        showLog
        core.isValidSubrepos
        initSubrepos
        addSubrepo
        pushSubrepos
        pullSubrepos
        core.isProject
        core.isNotProject
        core.isContainHelmCharts
        core.isNotContainHelmCharts
        initProject
        initHelm
        updateEnv
        updateProjectLinks
        addProjectLink
        setProjectValue
        core.buildDockerImage
        core.pullDockerImage
        core.pushDockerImage
        core.stopDockerContainer
        core.removeDockerContainer
        core.helmApply
        core.helmDestroy
      start: |
        set -e
        rm -Rf ./docs/tasks
        mkdir -p ./docs/tasks
        echo "This directory is autogenerated do not modify" > ./docs/tasks/README.md
        {{ $this := . -}}
        {{ range $index, $command := .Split (.GetConfig "services") "\n" }}
          {{ $command := $this.Trim $command " " }}
          {{ if ne $command "" -}}
            echo {{ $command }}
            echo "# {{ $command }}" > ./docs/tasks/{{ $command }}.md
            echo "\`\`\`" >> ./docs/tasks/{{ $command }}.md
            ./zaruba please {{ $command }} -x -n >> ./docs/tasks/{{ $command }}.md
            echo "\`\`\`" >> ./docs/tasks/{{ $command }}.md
          {{ end -}}
        {{ end -}}


  