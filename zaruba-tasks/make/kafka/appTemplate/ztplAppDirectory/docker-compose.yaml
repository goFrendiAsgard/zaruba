# https://github.com/confluentinc/cp-all-in-one/blob/7.0.1-post/cp-all-in-one/docker-compose.yml
---
version: '2'
services:

  zookeeper:
    build: ./zookeeper
    image: ${DOCKER_COMPOSE_IMAGE_NAME:-kafka}-zookeeper:${DOCKER_COMPOSE_IMAGE_TAG:-latest}
    hostname: zookeeper
    container_name: ztplAppContainerNameZookeeper
    restart: unless-stopped
    ports:
      - "${ZOOKEEPER_PORT:-2181}:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      JAVA_TOOL_OPTIONS: -Xmx512M

  broker:
    build: ./server
    image: ${DOCKER_COMPOSE_IMAGE_NAME:-kafka}-server:${DOCKER_COMPOSE_IMAGE_TAG:-latest}
    restart: unless-stopped
    hostname: broker
    container_name: ztplAppContainerNameBroker
    depends_on:
      - zookeeper
    ports:
      - "${KAFKA_LISTENER_PORT:-9092}:9092"
      - "${KAFKA_JMX_PORT:-9101}:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:${ZOOKEEPER_PORT:-2181}'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: ${KAFKA_JMX_PORT:-9101}
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      JAVA_TOOL_OPTIONS: -Xmx1G

  schema-registry:
    build: ./schema-registry
    image: ${DOCKER_COMPOSE_IMAGE_NAME:-kafka}-schema-registry:${DOCKER_COMPOSE_IMAGE_TAG:-latest}
    restart: unless-stopped
    hostname: schema-registry
    container_name: ztplAppContainerNameSchemaRegistry
    depends_on:
      - broker
    ports:
      - "${SCHEMA_REGISTRY_PORT:-8081}:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      JAVA_TOOL_OPTIONS: -Xmx120M

  connect:
    build: ./server-connect-datagen
    image: ${DOCKER_COMPOSE_IMAGE_NAME:-kafka}-server-connect-datagen:${DOCKER_COMPOSE_IMAGE_TAG:-latest}
    restart: unless-stopped
    hostname: connect
    container_name: ztplAppContainerNameConnect
    depends_on:
      - broker
      - schema-registry
    ports:
      - "${CONNECT_PORT:-8083}:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'broker:29092'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      # CLASSPATH required due to CC-2422
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-7.0.1.jar
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
      JAVA_TOOL_OPTIONS: -Xmx120M

  control-center:
    build: ./enterprise-control-center
    image: ${DOCKER_COMPOSE_IMAGE_NAME:-kafka}-enterprise-control-center:${DOCKER_COMPOSE_IMAGE_TAG:-latest}
    restart: unless-stopped
    hostname: control-center
    container_name: ztplAppContainerNameControlCenter
    depends_on:
      - broker
      - schema-registry
      - connect
      - ksqldb-server
    ports:
      - "${CONTROL_CENTER_PORT:-9021}:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'connect:8083'
      CONTROL_CENTER_KSQL_KSQLDB1_URL: "http://ksqldb-server:8088"
      CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: "http://localhost:8088"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
      JAVA_TOOL_OPTIONS: -Xmx120M

  ksqldb-server:
    build: ./ksqldb-server
    image: ${DOCKER_COMPOSE_IMAGE_NAME:-kafka}-ksqldb-server:${DOCKER_COMPOSE_IMAGE_TAG:-latest}
    restart: unless-stopped
    hostname: ksqldb-server
    container_name: ztplAppContainerNameKsqldbServer
    depends_on:
      - broker
      - connect
    ports:
      - "${KSQL_DB_PORT:-8088}:8088"
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      KSQL_BOOTSTRAP_SERVERS: "broker:29092"
      KSQL_HOST_NAME: ksqldb-server
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      KSQL_KSQL_CONNECT_URL: "http://connect:8083"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'
      JAVA_TOOL_OPTIONS: -Xmx256M

  ksqldb-cli:
    build: ./ksqldb-cli
    image: ${DOCKER_COMPOSE_IMAGE_NAME:-kafka}-ksqldb-cli:${DOCKER_COMPOSE_IMAGE_TAG:-latest}
    container_name: ztplAppContainerNameKsqldbCli
    restart: unless-stopped
    depends_on:
      - broker
      - connect
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true

  ksql-datagen:
    build: ./ksqldb-examples
    image: ${DOCKER_COMPOSE_IMAGE_NAME:-kafka}-ksqldb-examples:${DOCKER_COMPOSE_IMAGE_TAG:-latest}
    hostname: ksql-datagen
    container_name: ztplAppContainerNameKsqldbDatagen
    restart: unless-stopped
    depends_on:
      - ksqldb-server
      - broker
      - schema-registry
      - connect
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                       cub kafka-ready -b broker:29092 1 40 && \
                       echo Waiting for Confluent Schema Registry to be ready... && \
                       cub sr-ready schema-registry 8081 40 && \
                       echo Waiting a few seconds for topic creation to finish... && \
                       sleep 11 && \
                       tail -f /dev/null'"
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      STREAMS_BOOTSTRAP_SERVERS: broker:29092
      STREAMS_SCHEMA_REGISTRY_HOST: schema-registry
      STREAMS_SCHEMA_REGISTRY_PORT: 8081

  rest-proxy:
    build: ./kafka-rest
    image: ${DOCKER_COMPOSE_IMAGE_NAME:-kafka}-kafka-rest:${DOCKER_COMPOSE_IMAGE_TAG:-latest}
    hostname: rest-proxy
    container_name: ztplAppContainerNameRestProxy
    restart: unless-stopped
    depends_on:
      - broker
      - schema-registry
    ports:
      - ${REST_PROXY:-8082}:8082
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: 'broker:29092'
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      JAVA_TOOL_OPTIONS: -Xmx256M