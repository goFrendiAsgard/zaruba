upstream backend {
    server host.docker.internal:3000;
}

server {

    # -- SSL Configuration
    # listen       443 ssl;
    # listen  [::]:443 ssl;
    #
    # ssl_certificate      /etc/letsencrypt/live/stalchmst.com/fullchain.pem;
    # ssl_certificate_key  /etc/letsencrypt/live/stalchmst.com/privkey.pem;
    #
    # ssl_session_cache    shared:SSL:1m;
    # ssl_session_timeout  5m;
    #
    # ssl_ciphers  HIGH:!aNULL:!MD5;
    # ssl_prefer_server_ciphers  on;

    # -- Non SSL Configuration
    listen       443;
    listen  [::]:443;

    # -- Serve static file 
    location / {
      root       /opt/bitnami/nginx/html;
      index      index.html index.htm;
      try_files  $uri $uri/ @backend;
    }

    # -- Reverse proxy
    location @backend {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header HOST $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_pass       http://backend;
        proxy_redirect   off;
    }

}

server {

    # -- Non SSL Configuration
    listen       80 default_server;
    listen  [::]:80 default_server;

    location /.well-known/acme-challenge {
        allow  all;
        root   /opt/bitnami/nginx/html;
    }

    # -- Redirect to https 
    # if ($scheme != "https") {
    #     return 301 https://$host$request_uri;
    # }

    # -- Serve static file 
    location / {
      root       /opt/bitnami/nginx/html;
      index      index.html index.htm;
      try_files  $uri $uri/ @backend;
    }

    # -- Reverse proxy
    location @backend {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header HOST $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_pass       http://backend;
        proxy_redirect   off;
    }

}