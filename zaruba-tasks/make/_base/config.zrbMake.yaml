configs:

  zrbMake:
    shouldInitConfigVariables: true
    shouldInitConfigMapVariable: true
    shouldInitEnvMapVariable: true
    appBaseImageName: '{{ if .GetValue "appBaseImageName" }}{{ .GetValue "appBaseImageName" }}{{ else }}{{ .GetConfig "defaultAppBaseImageName" }}{{ end }}'
    appBuildImageCommand: '{{ .GetValue "appBuildImageCommand" }}'
    appCheckCommand: '{{ if ne (.GetValue "appCheckCommand") "" }}{{ .GetValue "appCheckCommand" }}{{ else }}{{ .GetConfig "defaultAppCheckCommand" }}{{ end }}'
    appContainerName: '{{ .GetValue "appContainerName" }}'
    appContainerVolumes: '{{ if ne (.GetValue "appContainerVolumes") "[]" }}{{ .GetValue "appContainerVolumes" }}{{ else }}{{ .GetConfig "defaultAppContainerVolumes" }}{{ end }}'
    appCrudEntity: '{{ .GetValue "appCrudEntity" }}'
    appCrudField: '{{ .GetValue "appCrudField" }}'
    appCrudFields: '{{ .GetValue "appCrudFields" }}'
    appDirectory: '{{ if .GetValue "appDirectory" }}{{ .GetValue "appDirectory" }}{{ else }}{{ .GetConfig "defaultAppDirectory" }}{{ end }}'
    appEnvPrefix: '{{ .GetValue "appEnvPrefix" }}'
    appEnvs: '{{ .GetValue "appEnvs" }}'
    appEventName: '{{ .GetValue "appEventName" }}'
    deploymentDirectory: '{{ if .GetValue "deploymentDirectory" }}{{ .GetValue "deploymentDirectory" }}{{ else if .GetConfig "appDirectory" }}{{ .GetConfig "appDirectory" }}Deployment{{ else }}{{ .GetConfig "defaultDeploymentDirectory" }}{{ end }}'
    deploymentName: '{{ .GetValue "deploymentName" }}'
    appHttpMethod: '{{ .GetValue "appHttpMethod" }}'
    appIcon: ''
    appImageName: '{{ .GetValue "appImageName" }}'
    appMigrateCommand: '{{ if ne (.GetValue "appMigrateCommand") "" }}{{ .GetValue "appMigrateCommand" }}{{ else }}{{ .GetConfig "defaultAppMigrateCommand" }}{{ end }}'
    appModuleName: '{{ .GetValue "appModuleName" }}'
    appName: '{{ .GetValue "appName" }}'
    appPorts: '{{ if ne (.GetValue "appPorts") "[]" }}{{ .GetValue "appPorts" }}{{ else }}{{ .GetConfig "defaultAppPorts" }}{{ end }}'
    appPrepareCommand: '{{ if ne (.GetValue "appPrepareCommand") "" }}{{ .GetValue "appPrepareCommand" }}{{ else }}{{ .GetConfig "defaultAppPrepareCommand" }}{{ end }}'
    appPushImageCommand: '{{ .GetValue "appPushImageCommand" }}'
    appRunnerVersion: '{{ .GetValue "appRunnerVersion" }}'
    appStartCommand: '{{ if ne (.GetValue "appStartCommand") "" }}{{ .GetValue "appStartCommand" }}{{ else }}{{ .GetConfig "defaultAppStartCommand" }}{{ end }}'
    appStartContainerCommand: '{{ if ne (.GetValue "appStartContainerCommand") "" }}{{ .GetValue "appStartContainerCommand" }}{{ else }}{{ .GetConfig "defaultAppStartContainerCommand" }}{{ end }}'
    appTestCommand: '{{ if ne (.GetValue "appTestCommand") "" }}{{ .GetValue "appTestCommand" }}{{ else }}{{ .GetConfig "defaultAppTestCommand" }}{{ end }}'
    appRpcName: '{{ .GetValue "appRpcName" }}'
    appUrl: '{{ .GetValue "appUrl" }}'
    defaultAppBaseImageName: ''
    defaultAppCheckCommand: ''
    defaultAppContainerVolumes: '[]'
    defaultAppDirectory: '{{ .GeneratedRandomName }}'
    defaultAppMigrateCommand: ''
    defaultAppPorts: '[]'
    defaultAppStartCommand: ''
    defaultAppStartContainerCommand: ''
    defaultAppTestCommand: ''
    defaultAppPrepareCommand: ''
    defaultDeploymentDirectory: '{{ if .GetConfig "defaultAppDirectory" }}{{ .GetConfig "defaultAppDirectory" }}Deployment{{ end }}'
    taskName: '{{ .GetValue "taskName" }}'
    templateLocations: '{{ .GetValue "templateLocations" }}'
    _taskIndexPath: ''
    _prepareBaseReplacementMap: '. "{{ .ZarubaHome }}/zaruba-tasks/make/_base/bash/prepareBaseReplacementMap.sh"'
    _prepareBaseVariables: '. "{{ .ZarubaHome }}/zaruba-tasks/make/_base/bash/prepareBaseVariables.sh"'
    _prepareBaseStartCommand: '. "{{ .ZarubaHome }}/zaruba-tasks/make/_base/bash/prepareStartCommand.sh"'
    _prepareBasePrepareCommand: '. "{{ .ZarubaHome }}/zaruba-tasks/make/_base/bash/preparePrepareCommand.sh"'
    _prepareBaseTestCommand: '. "{{ .ZarubaHome }}/zaruba-tasks/make/_base/bash/prepareTestCommand.sh"'
    _prepareBaseMigrateCommand: '. "{{ .ZarubaHome }}/zaruba-tasks/make/_base/bash/prepareMigrateCommand.sh"'
    _prepareBaseCheckCommand: '. "{{ .ZarubaHome }}/zaruba-tasks/make/_base/bash/prepareCheckCommand.sh"'
    _prepareReplacementMap: ''
    _prepare: ''
    _skipCreationPath: ''
    _skipCreation: '_skipIfPathExist "{{ .GetConfig "_skipCreationPath" }}"'
    _prepareVariables: ''
    _validate: ''
    _validateAppDirectory: '. "{{ .ZarubaHome }}/zaruba-tasks/make/_base/bash/validateAppDirectory.sh"'
    _validateAppContainerVolumes: '. "{{ .ZarubaHome }}/zaruba-tasks/make/_base/bash/validateAppContainerVolumes.sh"'
    _validateTemplateLocation: '. "{{ .ZarubaHome }}/zaruba-tasks/make/_base/bash/validateTemplateLocation.sh"'
    _validateAppPorts: '. "{{ .ZarubaHome }}/zaruba-tasks/make/_base/bash/validateAppPorts.sh"'
    _validateAppCrudFields: '. "{{ .ZarubaHome }}/zaruba-tasks/make/_base/bash/validateAppCrudFields.sh"'
    _generate: _generate "${_ZRB_TEMPLATE_LOCATIONS}" "${_ZRB_REPLACEMENT_MAP}"
    _includeModuleIndex: |
      {{ if .GetConfig "_taskIndexPath" -}}
      "{{ .ZarubaBin }}" project include "{{ .GetConfig "_taskIndexPath" }}" "${_ZRB_PROJECT_FILE_NAME}" 
      {{ end -}}
    _registerAppRunnerTasks: '. "{{ .ZarubaHome }}/zaruba-tasks/make/_base/bash/registerAppRunnerTasks.sh" "${_ZRB_PROJECT_FILE_NAME}" "${_ZRB_APP_NAME}"'
    _registerAppDeploymentTasks: '. "{{ .ZarubaHome }}/zaruba-tasks/make/_base/bash/registerDeploymentTasks.sh" "${_ZRB_PROJECT_FILE_NAME}" "${_ZRB_DEPLOYMENT_NAME}"'
    _integrate: ''
    _adjustPermission: ''
    _setProjectValue: ''
    _start: |
      . "{{ .ZarubaHome }}/zaruba-tasks/make/_base/bash/util.sh"
      _ZRB_REPLACEMENT_MAP='{}'
      _ZRB_PROJECT_FILE_NAME='./index.zaruba.yaml'
      _ZRB_APP_BUILD_IMAGE_COMMAND='{{ .Util.Str.Trim (.GetConfig "appBuildImageCommand") "\n " }}'
      _ZRB_APP_CHECK_COMMAND='{{ .Util.Str.Trim (.GetConfig "appCheckCommand") "\n " }}'
      _ZRB_APP_PREPARE_COMMAND='{{ .Util.Str.Trim (.GetConfig "appPrepareCommand") "\n " }}'
      _ZRB_APP_PUSH_IMAGE_COMMAND='{{ .Util.Str.Trim (.GetConfig "appPushImageCommand") "\n " }}'
      _ZRB_APP_START_COMMAND='{{ .Util.Str.Trim (.GetConfig "appStartCommand") "\n " }}'
      _ZRB_APP_START_CONTAINER_COMMAND='{{ .Util.Str.Trim (.GetConfig "appStartContainerCommand") "\n " }}'
      _ZRB_APP_TEST_COMMAND='{{ .Util.Str.Trim (.GetConfig "appTestCommand") "\n " }}'
      _ZRB_APP_MIGRATE_COMMAND='{{ .Util.Str.Trim (.GetConfig "appMigrateCommand") "\n " }}'
      __ZRB_PWD=$(pwd)
      echo "${_YELLOW}${_CONSTRUCTION_ICON} Prepare${_NORMAL}"
      {{ .GetConfig "_prepareBaseVariables" }}
      {{ .GetConfig "_prepareVariables" }}
      {{ .GetConfig "_prepareBaseStartCommand" }}
      {{ .GetConfig "_prepareBasePrepareCommand" }}
      {{ .GetConfig "_prepareBaseTestCommand" }}
      {{ .GetConfig "_prepareBaseMigrateCommand" }}
      {{ .GetConfig "_prepareBaseCheckCommand" }}
      {{ .GetConfig "_prepareBaseReplacementMap" }}
      {{ .GetConfig "_prepareReplacementMap" }}
      {{ .GetConfig "_prepare" }}
      cd "${__ZRB_PWD}"
      echo "${_YELLOW}${_CONSTRUCTION_ICON} Validate${_NORMAL}"
      {{ .GetConfig "_validateAppDirectory" }}
      {{ .GetConfig "_validateAppContainerVolumes" }}
      {{ .GetConfig "_validateTemplateLocation" }}
      {{ .GetConfig "_validateAppPorts" }}
      {{ .GetConfig "_validateAppCrudFields" }}
      {{ .GetConfig "_skipCreation" }}
      {{ .GetConfig "_validate" }}
      cd "${__ZRB_PWD}"
      echo "${_YELLOW}${_CONSTRUCTION_ICON} Generate${_NORMAL}"
      echo "${_YELLOW}${_CONSTRUCTION_ICON} Template Location:${_NORMAL} ${_ZRB_TEMPLATE_LOCATIONS}"
      echo "${_YELLOW}${_CONSTRUCTION_ICON} Replacement Map:${_NORMAL} ${_ZRB_REPLACEMENT_MAP}"
      {{ .GetConfig "_generate" }}
      cd "${__ZRB_PWD}"
      echo "${_YELLOW}${_CONSTRUCTION_ICON} Integrate${_NORMAL}"
      {{ .GetConfig "_includeModuleIndex" }}
      {{ .GetConfig "_registerAppRunnerTasks" }}
      {{ .GetConfig "_registerAppDeploymentTasks" }}
      {{ .GetConfig "_integrate" }}
      {{ .GetConfig "_adjustPermission" }}
      {{ .GetConfig "_setProjectValue" }}
      cd "${__ZRB_PWD}"
      echo "${_YELLOW}Synchronize task environments${_NORMAL}"
      "{{ .ZarubaBin }}" project syncEnv "./index.zaruba.yaml"
      echo "${_YELLOW}Synchronize project's environment files${_NORMAL}"
      "{{ .ZarubaBin }}" project syncEnvFiles "./index.zaruba.yaml"
    start: ''
    afterStart: |
      echo ${_SUCCESS_ICON}${_SUCCESS_ICON}${_SUCCESS_ICON}
      echo "${_BOLD}${_YELLOW}Done${_NORMAL}"